% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measures_net_emd.R
\name{netemd_many_to_many}
\alias{netemd_many_to_many}
\title{NetEMDs between all graph pairs using provided Graphlet-based Degree
Distributions}
\usage{
netemd_many_to_many(
  graphs = NULL,
  dhists = NULL,
  method = "optimise",
  smoothing_window_width = 0,
  return_details = FALSE,
  mc.cores = getOption("mc.cores", 2L),
  feature_type = "orbit",
  max_graphlet_size = 5,
  ego_neighbourhood_size = 0
)
}
\arguments{
\item{graphs}{A list of network/graph objects from the \code{igraph} package.
\code{graphs} can be set to \code{NULL} (default) if \code{dhists} is
provided.}

\item{dhists}{A list whose elements contain either: A  list of \code{dhist}
discrete histogram objects for each graph, or a list  a matrix of network
features (each column representing a feature). \code{dhists} can be set to
\code{NULL} (default) if \code{graphs} is provided.  A \code{dhist} object
can be obtained from \code{graph_features_to_histograms}.}

\item{method}{The method to use to find the minimum EMD across all potential
offsets for each pair of histograms. Default is "optimise" to use
R's built-in \code{stats::optimise} method to efficiently find the offset
with the minimal EMD. However, this is not guaranteed to find the global
minimum if multiple local minima EMDs exist. You can alternatively specify
the "exhaustive" method, which will exhaustively evaluate the EMD between the
histograms at all offsets that are candidates for the minimal EMD.}

\item{smoothing_window_width}{Width of "top-hat" smoothing window to apply to
"smear" point masses across a finite width in the real domain. Default is 0,
which  results in no smoothing. Care should be taken to select a
\code{smoothing_window_width} that is appropriate for the discrete domain
(e.g.for the integer domain a width of 1 is the natural choice).}

\item{return_details}{Logical indicating whether to return the individual
minimal EMDs and associated offsets for all pairs of histograms}

\item{mc.cores}{Number of cores to use for parallel processing. Defaults to
the \code{mc.cores} option set in the R environment.}

\item{feature_type}{Type of graphlet-based feature to count: "graphlet"
counts the number of graphlets each node participates in; "orbit" (default)
calculates the number of graphlet orbits each node participates in.}

\item{max_graphlet_size}{Determines the maximum size of graphlets to count.
Only graphlets containing up to \code{max_graphlet_size} nodes will be
counted. Possible values are 4, and 5 (default).}

\item{ego_neighbourhood_size}{The number of steps from the source node to
include nodes for each ego-network. NetEmd was proposed for individual nodes
alone, hence the default value is 0.}
}
\value{
NetEMD measures between all pairs of graphs for which features
were provided. Format of returned data depends on the \code{return_details}
parameter. If set to FALSE, a list is returned with the following named
elements:\code{netemd}: a vector of NetEMDs for each pair of graphs,
\code{comp_spec}: a comparison specification table containing the graph names
and indices within the input GDD list for each pair of graphs compared.
If \code{return_details} is set to FALSE, the list also contains the
following matrices for each graph pair: \code{min_emds}: the minimal EMD for
each GDD used to compute the NetEMD, \code{min_offsets}: the associated
offsets giving the minimal EMD for each GDD
}
\description{
NetEMDs between all graph pairs using provided Graphlet-based Degree
Distributions
}
