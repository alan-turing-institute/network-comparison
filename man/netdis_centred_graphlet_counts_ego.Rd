% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measures_net_dis.R
\name{netdis_centred_graphlet_counts_ego}
\alias{netdis_centred_graphlet_counts_ego}
\title{Generate Netdis centred graphlets counts by subtracting expected counts}
\usage{
netdis_centred_graphlet_counts_ego(graph, max_graphlet_size,
  neighbourhood_size, expected_ego_count_fn = NULL, min_ego_nodes = 3,
  min_ego_edges = 1)
}
\arguments{
\item{graph}{A connected, undirected, simple graph as an
\code{igraph} object.}

\item{max_graphlet_size}{Determines the maximum size of graphlets to count.
Only graphlets containing up to \code{max_graphlet_size} nodes
will be counted.}

\item{neighbourhood_size}{The number of steps from the source node to include
nodes for each ego-network.}

\item{expected_ego_count_fn}{A function for generating expected ego-network
graphlet counts for a graph. This function should take a connected,
undirected, simple graph as an \code{igraph} object for its only argument.
Where \code{expected_ego_count_fn} is specific to particular values of
\code{max_graphlet_size} or \code{neighbourhood_size}, care should be taken
to ensure that the values of these parameters passed to this function are
consistent with those used when creating \code{expected_ego_count_fn}.}

\item{min_ego_nodes}{Filter ego networks which have fewer
than min_ego_nodes nodes}

\item{min_ego_edges}{Filter ego networks which have fewer
than min_ego_edges edges}
}
\value{
A vector with centred counts for each graphlet type in
each ego network.

TODO: Remove @export prior to publishing
}
\description{
Generate Netdis centred graphlets counts by subtracting expected counts
}
